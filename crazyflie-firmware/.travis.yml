sudo: required
language: c
services:
  - docker
before_install:
  - docker pull bitcraze/builder
script:
  # Build CF2 basic
  - docker run --rm -v ${PWD}:/module bitcraze/builder ./tools/build/build PLATFORM=CF2

  # Build CF2 with "all" features enabled
  - docker run --rm -v ${PWD}:/module bitcraze/builder ./tools/build/make clean
  - docker run --rm -v ${PWD}:/module bitcraze/builder ./tools/build/build PLATFORM=CF2 DEBUG=1 "EXTRA_CFLAGS=-DCALIBRATED_LED_MORSE -DIMU_TAKE_ACCEL_BIAS -DIMU_MPU6500_DLPF_256HZ -DMADWICK_QUATERNION_IMU -DDEBUG_QUEUE_MONITOR -DENABLE_BQ_DECK -DSITAW_ENABLED -DOW_WRITE_TEST -DOW_READ_TEST -DDEBUG_PRINT_ON_UART"

  # Build CF2 with kalman estimator
  - docker run --rm -v ${PWD}:/module bitcraze/builder ./tools/build/make clean
  - docker run --rm -v ${PWD}:/module bitcraze/builder ./tools/build/build PLATFORM=CF2 DEBUG=1 ESTIMATOR=kalman

  # Build CF2 with bosch sensors
  - docker run --rm -v ${PWD}:/module bitcraze/builder ./tools/build/make clean
  - docker run --rm -v ${PWD}:/module bitcraze/builder ./tools/build/build PLATFORM=CF2 SENSORS=bosch

  # Build CF2 with TDMA
  - docker run --rm -v ${PWD}:/module bitcraze/builder ./tools/build/make clean
  - docker run --rm -v ${PWD}:/module bitcraze/builder ./tools/build/build PLATFORM=CF2 DEBUG=1 LPS_TDMA_ENABLE=1 "EXTRA_CFLAGS=-DTDMA_NSLOTS_BITS=1 -DTDMA_SLOT=0"

  # Build CF2 with TDOA
  - docker run --rm -v ${PWD}:/module bitcraze/builder ./tools/build/make clean
  - docker run --rm -v ${PWD}:/module bitcraze/builder ./tools/build/build PLATFORM=CF2 DEBUG=1 LPS_TDOA_ENABLE=1

  # Build CF1
  - docker run --rm -v ${PWD}:/module bitcraze/builder ./tools/build/make clean
  - docker run --rm -v ${PWD}:/module bitcraze/builder ./tools/build/build PLATFORM=CF1

  # Build CF1 with "all" features enabled
  - docker run --rm -v ${PWD}:/module bitcraze/builder ./tools/build/make clean
  - docker run --rm -v ${PWD}:/module bitcraze/builder ./tools/build/build PLATFORM=CF1 DEBUG=1 "EXTRA_CFLAGS=-DCALIBRATED_LED_MORSE -DUSE_ESKYLINK -DUART_OUTPUT_TRACE_DATA -DDEBUG_PRINT_ON_UART"
